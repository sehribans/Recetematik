// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Recetematik.Models;

#nullable disable

namespace Recetematik.Migrations
{
    [DbContext(typeof(RmContext))]
    partial class RmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Recetematik.Models.TblBirim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AD");

                    b.HasKey("Id");

                    b.ToTable("TBL_BIRIM", (string)null);
                });

            modelBuilder.Entity("Recetematik.Models.TblCari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adres")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("ADRES");

                    b.Property<decimal?>("Bakiye")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("BAKIYE");

                    b.Property<string>("Eposta")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EPOSTA");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime")
                        .HasColumnName("OLUSTURMA_TARIHI");

                    b.Property<string>("Telefon")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TELEFON");

                    b.Property<string>("Unvan")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("UNVAN");

                    b.HasKey("Id");

                    b.ToTable("TBL_CARI", (string)null);
                });

            modelBuilder.Entity("Recetematik.Models.TblHammadde", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Adet")
                        .HasColumnType("int")
                        .HasColumnName("ADET");

                    b.Property<int?>("BirimId")
                        .HasColumnType("int")
                        .HasColumnName("BIRIM_ID");

                    b.Property<decimal?>("Fiyat")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("FIYAT");

                    b.Property<string>("MaddeAd")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MADDE_AD");

                    b.HasKey("Id");

                    b.ToTable("TBL_HAMMADDE", (string)null);
                });

            modelBuilder.Entity("Recetematik.Models.TblUrun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("Fiyat")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("FIYAT");

                    b.Property<string>("Urunadi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("URUNADI");

                    b.HasKey("Id");

                    b.ToTable("TBL_URUN", (string)null);
                });

            modelBuilder.Entity("Recetematik.Models.TblUrunbilgi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("HammaddeId")
                        .HasColumnType("int")
                        .HasColumnName("HAMMADDE_ID");

                    b.Property<int?>("Miktar")
                        .HasColumnType("int")
                        .HasColumnName("MIKTAR");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("URUN_ID");

                    b.HasKey("Id");

                    b.ToTable("TBL_URUNBILGI", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
